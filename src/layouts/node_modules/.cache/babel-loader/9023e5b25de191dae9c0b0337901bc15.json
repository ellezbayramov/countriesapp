{"ast":null,"code":"var _jsxFileName = \"/home/ellez/Desktop/country/countrie/src/layouts/Countrys.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport { useContext, useEffect } from 'react';\nimport { Mycontext } from '../Context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AllContry = styled.div`\nwidth  : 100%;\nheight : auto;\nz-index : 200;\ntext-align : center;\nbackground-color :none;\ndisplay : flex;\nflex-direction : row;\nflex-wrap : wrap;\njustify-content : center;\nmargin-bottom : 20px;\n\n`;\n_c = AllContry;\nconst Headertext = styled.p`\ncolor : black;\nfont-weight : 800;\nfont-family : sans-serif;\nwidth  :100%;\ntext-align :center;\nfont-size : 30px\n`;\n_c2 = Headertext;\nconst Countrycontent = styled.div`\nheight : 250px;\nwidth : 300px;\nmargin-top : 10px;\nmargin-left   :30px;\nmargin-bottom : 20px;\nbackground-color :#efefef;\n\n@media (max-width: 550px) {\nmargin-left : 0;\nmargin-bottom : 15px    \n  } \n\n\n`;\n_c3 = Countrycontent;\nconst Imgdiv = styled.div`\nwidth : 30%;\nheight : auto;\nfloat : left\n`;\n_c4 = Imgdiv;\nconst Informationsdiv = styled.div`\nwidth : 70%;\nheight : auto;\nmax-height : 40%;\nfloat : left;\n\n`;\n_c5 = Informationsdiv;\nconst Countryname = styled.p`\ncolor : black;\ntext-align : left;\nmargin-left : 5px;\nfont-weight : 700;\n`;\n_c6 = Countryname;\nconst Countrycity = styled(Countryname)`\ncolor : red\n`;\n_c7 = Countrycity;\nconst Informationsdivtwo = styled.div`\nwidth : 100%;\nheight : 158px;\nborder : solid 1px red;\nmargin-top : 95px;\n`;\n_c8 = Informationsdivtwo;\nconst Countryarea = styled(Countryname)`\ncolor : red\n`;\n_c9 = Countryarea;\nconst Countrynative = styled(Countryname)`\ncolor : red\n`;\n_c10 = Countrynative;\nconst Countrypopulation = styled(Countryname)`\ncolor : red\n`;\n_c11 = Countrypopulation;\nconst CountryRegion = styled(Countryname)`\ncolor : red\n`;\n_c12 = CountryRegion;\n\nfunction Countrys() {\n  _s();\n\n  const {\n    countries\n  } = useContext(Mycontext);\n  useEffect(() => {\n    console.log(countries);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(AllContry, {\n      children: [/*#__PURE__*/_jsxDEV(Headertext, {\n        children: \"Country\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), countries.slice(1, 50).map(f => {\n        return /*#__PURE__*/_jsxDEV(Countrycontent, {\n          children: [/*#__PURE__*/_jsxDEV(Imgdiv, {\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: f.flag,\n              className: \"img-fluid\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Informationsdiv, {\n            children: [/*#__PURE__*/_jsxDEV(Countryname, {\n              children: f.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Countrycity, {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  color: \"black\"\n                },\n                children: \"City\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 26\n              }, this), \" : \", f.capital]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Informationsdivtwo, {\n            children: [/*#__PURE__*/_jsxDEV(Countryarea, {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  color: \"black\"\n                },\n                children: \"Area : \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 26\n              }, this), f.area, \" km\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Countrypopulation, {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  color: \"black\"\n                },\n                children: \"Population : \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 32\n              }, this), f.population]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Countrynative, {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  color: \"black\"\n                },\n                children: \"Native : \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 28\n              }, this), f.nativeName]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(CountryRegion, {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  color: \"black\"\n                },\n                children: \"Region : \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 28\n              }, this), f.region]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Countrys, \"10IiVVgguI336YKUIPtL2+S61tQ=\");\n\n_c13 = Countrys;\nexport default Countrys;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12, _c13;\n\n$RefreshReg$(_c, \"AllContry\");\n$RefreshReg$(_c2, \"Headertext\");\n$RefreshReg$(_c3, \"Countrycontent\");\n$RefreshReg$(_c4, \"Imgdiv\");\n$RefreshReg$(_c5, \"Informationsdiv\");\n$RefreshReg$(_c6, \"Countryname\");\n$RefreshReg$(_c7, \"Countrycity\");\n$RefreshReg$(_c8, \"Informationsdivtwo\");\n$RefreshReg$(_c9, \"Countryarea\");\n$RefreshReg$(_c10, \"Countrynative\");\n$RefreshReg$(_c11, \"Countrypopulation\");\n$RefreshReg$(_c12, \"CountryRegion\");\n$RefreshReg$(_c13, \"Countrys\");","map":{"version":3,"sources":["/home/ellez/Desktop/country/countrie/src/layouts/Countrys.jsx"],"names":["React","styled","useContext","useEffect","Mycontext","AllContry","div","Headertext","p","Countrycontent","Imgdiv","Informationsdiv","Countryname","Countrycity","Informationsdivtwo","Countryarea","Countrynative","Countrypopulation","CountryRegion","Countrys","countries","console","log","slice","map","f","flag","name","color","capital","area","population","nativeName","region"],"mappings":"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","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport {useContext,useEffect} from 'react'\nimport {Mycontext} from '../Context'\n\n\n\n\n\nconst AllContry  = styled.div`\nwidth  : 100%;\nheight : auto;\nz-index : 200;\ntext-align : center;\nbackground-color :none;\ndisplay : flex;\nflex-direction : row;\nflex-wrap : wrap;\njustify-content : center;\nmargin-bottom : 20px;\n\n`\n\n\nconst Headertext = styled.p`\ncolor : black;\nfont-weight : 800;\nfont-family : sans-serif;\nwidth  :100%;\ntext-align :center;\nfont-size : 30px\n`\n\n\nconst Countrycontent = styled.div`\nheight : 250px;\nwidth : 300px;\nmargin-top : 10px;\nmargin-left   :30px;\nmargin-bottom : 20px;\nbackground-color :#efefef;\n\n@media (max-width: 550px) {\nmargin-left : 0;\nmargin-bottom : 15px    \n  } \n\n\n`  \n\n\nconst Imgdiv  = styled.div `\nwidth : 30%;\nheight : auto;\nfloat : left\n`\n\n\nconst Informationsdiv = styled.div`\nwidth : 70%;\nheight : auto;\nmax-height : 40%;\nfloat : left;\n\n`  \n\n\nconst Countryname = styled.p`\ncolor : black;\ntext-align : left;\nmargin-left : 5px;\nfont-weight : 700;\n`\n\nconst Countrycity = styled(Countryname)`\ncolor : red\n`\n\nconst Informationsdivtwo = styled.div`\nwidth : 100%;\nheight : 158px;\nborder : solid 1px red;\nmargin-top : 95px;\n`\n\n\nconst Countryarea = styled(Countryname)`\ncolor : red\n`\n\nconst Countrynative = styled(Countryname)`\ncolor : red\n`\n\nconst Countrypopulation = styled(Countryname)`\ncolor : red\n`\n\nconst CountryRegion = styled(Countryname)`\ncolor : red\n`\n\n\n\n\nfunction Countrys() {\n\n\nconst {countries}  = useContext(Mycontext)\n\nuseEffect(() => {\nconsole.log(countries)\n},[])\n\n\n  return (\n    <div>\n      <AllContry>\n        <Headertext>Country</Headertext>\n      {\n        \n        countries.slice(1,50).map((f) => {\n          return (\n           \n            <Countrycontent>\n            \n\n\n            <Imgdiv>\n            <img src = {f.flag} className = \"img-fluid\"/>\n            </Imgdiv>\n\n            <Informationsdiv>\n            <Countryname>{f.name}</Countryname>\n            <Countrycity><span style = {{color : \"black\"}}>City</span> : {f.capital}</Countrycity>\n            </Informationsdiv>\n\n\n            <Informationsdivtwo>\n            <Countryarea><span style = {{color : \"black\"}}>Area : </span>{f.area} km</Countryarea>\n            <Countrypopulation><span style = {{color : \"black\"}}>Population : </span>{f.population}</Countrypopulation>\n            <Countrynative><span style = {{color : \"black\"}}>Native : </span>{f.nativeName}</Countrynative>\n            <CountryRegion><span style = {{color : \"black\"}}>Region : </span>{f.region}</CountryRegion>\n            </Informationsdivtwo>\n            \n            \n            \n            \n            </Countrycontent>\n                      )\n        })\n      }\n\n\n      \n      </AllContry>\n    </div>\n  )\n}\n\n\nexport default Countrys"]},"metadata":{},"sourceType":"module"}